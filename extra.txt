# @app.route('/gfg/getdataset',methods=["GET","POST"])
# def add_datasets():
#     if request.method == "GET":
#         return render_template("gfgf.html")
#     if request.method == "POST":
#         datasetname = request.files['file'].name
#         filedata = request.files['file']
#         newFile = GFGP(ds_name=datasetname,data=filedata.read())
#         db.session.add(newFile)
#         db.session.commit()
#         return redirect(url_for("get_datasets"))
# @app.route('/gfg/s-dataset',methods=["GET","POST"])
# def get_datasets():
#     thedlist=[]
#     user = GFGP.query.all()
#     for d in user:
#         if d.ds_name not in thedlist:
#             thedlist.append([d.ds_name])
#     return render_template("gfg.html",user="Papa Log",dataname=thedlist)
# @app.route('/existing-user/<user>/<dataname>/visualize/download-datasets',methods=["GET"])
# def dow_data(user,dataname):
#     filedata = BytesIO(GFGP.query.filter_by(ds_name=dataname).first().data)
#     ds = GFGP.query.filter_by(ds_name=dataname).first().ds_name
#     return send_file(filedata,attachment_filename=ds,as_attachment=True)

# class GFGP(db.Model):
#     id = db.Column(db.Integer, primary_key=True)
#     ds_name = db.Column(db.String(40),unique=True,nullable=False)
#     data = db.Column(db.LargeBinary,nullable=False)
#     def __repr__(self):
#         return f"User('{self.ds_name}','{self.data}')"
